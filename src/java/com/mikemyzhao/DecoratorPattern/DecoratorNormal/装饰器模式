1、组件
（1）Component抽象组件
Component是一个接口或者是抽象类，就是定义我们最核心的对象，也就是最原始的对象（成绩单）
注意：在装饰器模式中，必然有一个最基本、最核心、最原始的接口或者抽象类充当Component抽象构件
（2）ConcreteComponent具体构件
ConcreteComponent是最核心、最原始、最基本的接口或抽象类的实现，你要装饰的就是它（四年级成绩单）
(3)Decorator装饰角色
一般是一个抽象类，做什么用呢？实现接口或者抽象方法，它里面可不一定有抽象的方法呀，在它的属性里必然有一个private变量指向Component组件
（4）具体装饰角色
ConcreteDecoratorA和ConcreteDecoratorB是两个具体的装饰类，要把最核心、最原始、最基本的东西装饰成其他东西

2、优点
（1）装饰类和被装饰类可以相互独立，不会耦合。Component无须知道Decorator。Decorator类是从外部来扩展Coponent类的功能，Decorator
也不用知道具体构件
（2）装饰模式是继承关系的一种替代方案，装饰类Decorator不管装饰多少层，返回的对象还是Compenent，实现的是is-a的关系
(3)装饰模式可以动态地扩展一个实现类的功能。
3、缺点：复杂

4、使用场景
（1）扩展一个类的功能
(2)动态地给一个对象增加功能，这些功能可以动态撤销
(3)为一批兄弟类进行改装或者加装功能，首选装饰器模式
