策略模式
1、策略模式是把算法封装起来，封装的类就是Context，实现相同的接口，这样就可以互相转化了。
2、角色组件
（1）Context封装角色
上下文角色，起到承上启下的作用，屏蔽高层模块对策略、算法的直接访问，封装可能存在的变化
（2）Strategy抽象策略角色
策略、算法家族的抽象，通常为接口，定义每个策略或算法必须具有的方法和属性。
（3）ConcreteStrategy具体策略角色
实现抽象策略中的操作，该类含有具体的算法

3、优点
算法自由切换；避免多重条件判断；扩展性良好

4、缺点
策略类数量多；所有的策略类都需要对外暴露

5、使用场景
多个类只有在算法或行为上稍有不同的场景
算法需要自由切换的场景
需要屏蔽算法规则的场景