1、组合模式
将对象组合成树形结构以表示"部分-整体"的层次结构，使得用户对单个对象和组合对象的使用具有一致性
2、组件
（1）Component抽象构件角色
定义参加组合对象的共有方法和属性，可以定义一些默认的行为或属性，比如例子中的getInfo就封装到了抽象类中
（2）Leaf叶子构件
叶子对象，下面没有分支，遍历的最小单位
（3）Composite树枝构件
树枝对象，作用是组合树枝节点和叶子节点形成一个树状结构

3、优点
（1）高层模块调用简单
所有节点都是Component，整体和局部对于调用者来说没有任何区别，也就是说高层模块不必关心自己处理的是单个对象还是整个组合结构，简化了高层代码
（2）节点自由增加
如果想增加一个树枝节点、树叶节点都很容易，只要找到它的父节点就好了，容易扩展，符合开闭原则
4、缺点
树叶和树枝直接使用了实现类，这个很不恰当。

5、使用场景
维护和展示部分-整体关系的场景，如树形菜单、文件和文件夹管理
从一个整体中能够独立出部分模块或功能额的场景