1、单分派和多分派
单分派语言处理一个操作是根据请求者的名称和接收到的参数决定的，在Java中有静态绑定和动态绑定之说，它的实现是依据重载和重写实现的

2、例子
一个演员可以饰演多个角色
在原始的例子是有重写和重载的方法，
重载在编译器期就决定了调用哪个方法，它是根据role的表面类型决定调用act(Role role)方法，这是静态绑定；
而Actor的执行方法act则是由实际类型决定的，这是动态绑定

3、引申
一个演员可以扮演很多角色，系统应该适应这种变化，也就是根据演员、角色两个对象类型，完成不同的操作任务，如何实现？
我们可以使用访问者模式

不管演员和角色怎么变化，我们都能够找到期望的方法运行，这就是双分派，双分派意味着得到执行的操作决定于请求的种类和两个
接收者的类型，它是多分派的一种特例。我们可以看到Java是一个支持多分派的单分派语言

